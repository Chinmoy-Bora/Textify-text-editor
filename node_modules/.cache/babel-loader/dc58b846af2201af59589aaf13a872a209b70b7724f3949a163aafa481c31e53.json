{"ast":null,"code":"var _jsxFileName = \"/Users/chinmoybora/Desktop/react_tut_2/textify/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  // Function called during button pressed\n\n  const onClickHandle = () => {\n    console.log(\"Upper case was clicked \" + Text);\n    let newText = Text.toUpperCase();\n    setText(newText);\n  };\n  const onClickHandle2 = () => {\n    console.log(\"Loweer case was clicked \" + Text);\n    let newText = Text.toLowerCase();\n    setText(newText);\n  };\n  const onClickHandle3 = () => {\n    console.log(\"Loweer case was clicked \" + Text);\n    let newText = Text.replace(Text, '');\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    console.log(\"TTT\");\n    setText(event.target.value);\n  };\n  const capitalize = () => {\n    const titleCase = Text.toLowerCase().split(' ').map(word => {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n    setText(titleCase);\n  };\n  const handleCopy = () => {\n    navigator.clipboard.writeText(Text);\n    props.showAlert(\"Text copied!\", \"success\");\n    //console.log(\"Text Copied\")\n  };\n\n  // const handlerfuncTranslate = async () =>{\n  //     translate.engine = \"google\";\n  //     translate.key = process.env.GOOGLE_KEY;\n\n  //     const textvalue = await translate(Text,\"fr\");\n  //     setText(textvalue);\n  // }\n\n  const onClickHandle4 = () => {\n    let newtext = \"\";\n    for (let index = 0; index < Text.length; index++) {\n      if (index % 2 === 0) {\n        newtext += Text[index].toLowerCase();\n      } else {\n        newtext += Text[index].toUpperCase();\n      }\n    }\n    setText(newtext);\n  };\n\n  // const boldText = ()=> {\n  //         if(Text.fontWeight === \"normal\")\n  //             setText({fontWeight: \"bold\"});\n  //         else if(Text.fontWeight === \"bold\")\n  //             setText({fontWeight: \"normal\"});\n  //     }\n\n  // const trim = () =>{\n  //     setText(Text.trim());\n  //    }\n\n  // const handleEmail =()=>{\n  //     let newText=Text.split(\"@\");\n  //     let later = newText[1].split(\".\");\n  //     setText(\"Your account is on \"+ later[0] + \" And your username could be\" + newText[0]);\n  // }\n\n  // const handleTcclick=()=>{\n  //     const newText = Text.split(' ').map(w => w[0].toUpperCase() + w.substring(1).toLowerCase()).join(' ');       \n  //     setText(newText);\n  // }\n\n  const [Text, setText] = useState(\" \");\n  return (\n    /*#__PURE__*/\n    // Buttons to operate different tasks\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control mx-2 my-2\",\n            id: \"myBox\",\n            style: {\n              backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n              color: props.mode === 'dark' ? 'white' : 'black'\n            },\n            onChange: handleOnChange,\n            value: Text,\n            rows: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary my-2\",\n            onClick: onClickHandle,\n            children: \"Convert to Uppercase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mx-2 my-2\",\n            onClick: onClickHandle2,\n            children: \"Convert to Lowercase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mx-2 my-2\",\n            onClick: onClickHandle4,\n            children: \"Alternat Text Uppercase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mx-2 my-2\",\n            onClick: capitalize,\n            children: \"Capitalize 1st letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mx-2 my-2\",\n            onClick: handleCopy,\n            children: \"Copy whole text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mx-2\",\n            onClick: onClickHandle3,\n            children: \"Clear Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cotainer my-5\",\n        style: {\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Text summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [Text.split(\" \").length, \" words and \", Text.length, \" character\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [0.008 * Text.split(\" \").length, \" Minutes read \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-5\",\n        style: {\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: Text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(TextForm, \"X0+/J6NPdbjeOBBprqc+B628bQU=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","onClickHandle","console","log","Text","newText","toUpperCase","setText","onClickHandle2","toLowerCase","onClickHandle3","replace","handleOnChange","event","target","value","capitalize","titleCase","split","map","word","charAt","slice","join","handleCopy","navigator","clipboard","writeText","showAlert","onClickHandle4","newtext","index","length","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","id","backgroundColor","onChange","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/chinmoybora/Desktop/react_tut_2/textify/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n\n    // Function called during button pressed\n\n    const onClickHandle = () => {\n        console.log(\"Upper case was clicked \" + Text)\n        let newText = Text.toUpperCase();\n        setText(newText)\n    }\n\n\n    const onClickHandle2 = () => {\n        console.log(\"Loweer case was clicked \" + Text)\n        let newText = Text.toLowerCase();\n        setText(newText)\n    }\n\n\n    const onClickHandle3 = () => {\n        console.log(\"Loweer case was clicked \" + Text)\n        let newText = Text.replace(Text, '')\n        setText(newText)\n    }\n\n\n\n    const handleOnChange = (event) => {\n        console.log(\"TTT\")\n        setText(event.target.value)\n    }\n\n\n    const capitalize = () => {\n        const titleCase = Text\n            .toLowerCase()\n            .split(' ')\n            .map(word => {\n                return word.charAt(0).toUpperCase() + word.slice(1);\n            })\n            .join(' ');\n\n        setText(titleCase);\n    }\n\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(Text)\n        props.showAlert(\"Text copied!\",\"success\")\n        //console.log(\"Text Copied\")\n\n\n    }\n\n    // const handlerfuncTranslate = async () =>{\n    //     translate.engine = \"google\";\n    //     translate.key = process.env.GOOGLE_KEY;\n\n    //     const textvalue = await translate(Text,\"fr\");\n    //     setText(textvalue);\n    // }\n\n\n    const onClickHandle4 = () => {\n        let newtext = \"\"\n        for (let index = 0; index < Text.length; index++) {\n            if ((index % 2)=== 0) {\n                newtext += Text[index].toLowerCase()\n            }\n            else {\n                newtext += Text[index].toUpperCase()\n            }\n\n        }\n        setText(newtext)\n    }\n\n\n\n    // const boldText = ()=> {\n    //         if(Text.fontWeight === \"normal\")\n    //             setText({fontWeight: \"bold\"});\n    //         else if(Text.fontWeight === \"bold\")\n    //             setText({fontWeight: \"normal\"});\n    //     }\n\n    // const trim = () =>{\n    //     setText(Text.trim());\n    //    }\n\n    // const handleEmail =()=>{\n    //     let newText=Text.split(\"@\");\n    //     let later = newText[1].split(\".\");\n    //     setText(\"Your account is on \"+ later[0] + \" And your username could be\" + newText[0]);\n    // }\n\n    // const handleTcclick=()=>{\n    //     const newText = Text.split(' ').map(w => w[0].toUpperCase() + w.substring(1).toLowerCase()).join(' ');       \n    //     setText(newText);\n    // }\n\n    const [Text, setText] = useState(\" \")\n\n\n    return (\n\n        // Buttons to operate different tasks\n        <>\n            <div className='container' style={{color : props.mode === 'dark'?'white':'black'}}>\n\n                <h1>{props.heading}</h1 >\n\n                <div className=\"mb-3\">\n\n                    <textarea className=\"form-control mx-2 my-2\" id=\"myBox\" style={{backgroundColor : props.mode === 'dark'?'grey':'white' ,color :props.mode === 'dark'?'white':'black' }} onChange={handleOnChange} value={Text} rows=\"8\"></textarea>\n\n                    <button className=\"btn btn-primary my-2\" onClick={onClickHandle}>Convert to Uppercase</button>\n\n                    <button className=\"btn btn-primary mx-2 my-2\" onClick={onClickHandle2}>Convert to Lowercase</button>\n\n                    <button className=\"btn btn-primary mx-2 my-2\" onClick={onClickHandle4}>Alternat Text Uppercase</button>\n\n                    <button className=\"btn btn-primary mx-2 my-2\" onClick={capitalize}>Capitalize 1st letter</button>\n\n                    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy whole text</button>\n\n                    {/* <button className=\"btn btn-primary mx-2\" onClick={handlerfuncTranslate}>Translate</button> */}\n\n                    {/* <button className=\"btn btn-primary mx-2\" onClick={trim}>Trim</button> */}\n\n                    {/* <button className=\"btn btn-primary mx-2\" onClick={handleEmail}>Extract Email</button> */}\n\n                    {/* <button className=\"btn btn-primary mx-2\" onClick={handleTcclick}>Titlecase</button> */}\n\n                    <button className=\"btn btn-primary mx-2\" onClick={onClickHandle3}>Clear Text</button>\n\n                </div>\n            </div >\n\n            {/* Text summaey and preview */}\n\n            <div className=\"cotainer my-5\" style={{color : props.mode === 'dark'?'white':'black'}}>\n\n                <h1>Text summary</h1>\n\n                <p>{Text.split(\" \").length} words and {Text.length} character</p>\n\n                <p>{0.008 * (Text.split(\" \").length)} Minutes read </p>\n\n\n\n            </div>\n\n            <div className=\"container my-5\" style={{color : props.mode === 'dark'?'white':'black'}}>\n\n                <h1>Preview</h1>\n\n                <p>{Text}</p>\n\n            </div>\n        </>\n\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}